{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["UserGithub","props","state","userID","username","githubtUrl","avatarUrl","company","location","bio","followers","$","get","this","source","result","console","log","data","setState","login","name","html_url","avatar_url","window","href","src","style","color","display","flexDirection","IconButton","onClick","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,I,oHCgFAA,E,kDArEX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAO,GACPC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,QAAQ,GACRC,SAAS,GACTC,IAAI,GACJC,UAAU,IAVK,E,qDAanB,WAAqB,IAAD,OAClBC,IAAEC,IAAIC,KAAKZ,MAAMa,QAAO,SAACC,GACvBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACF,EAAKC,SAAS,CACZhB,OAAOe,EAAKE,MACZhB,SAAUc,EAAKG,KACfhB,WAAYa,EAAKI,SACjBhB,UAAWY,EAAKK,WAChBhB,QAAQW,EAAKX,QACbC,SAASU,EAAKV,SACdC,IAAIS,EAAKT,IACTC,UAAUQ,EAAKR,iB,qBAOvB,WACCc,OAAOhB,SAASiB,KAAKZ,KAAKX,MAAMG,a,oBAIjC,WACE,OACE,gCACE,qBAAKqB,IAAKb,KAAKX,MAAMI,YACrB,oBAAIqB,MAAO,CAACC,MAAO,WAAnB,SAAgCf,KAAKX,MAAME,WAC3C,oBAAIuB,MAAO,CAACC,MAAO,WAAnB,SAAgCf,KAAKX,MAAMC,SAC3C,uBAAMwB,MAAO,CAACE,QAAS,cAAcC,cAAe,OAApD,UACE,cAAC,IAAD,CAAiBF,MAAM,YACvB,oBAAID,MAAO,CAACC,MAAO,WAAnB,SAAgCf,KAAKX,MAAMQ,YAC3C,cAACqB,EAAA,EAAD,CAAYH,MAAM,UAAUI,QAASnB,KAAKmB,QAAQC,KAAKpB,MAAvD,SAA8D,cAAC,IAAD,SAEhE,uBACA,uBAAMc,MAAO,CAACE,QAAS,cAAcC,cAAe,OAApD,UACE,cAAC,IAAD,CAAkBF,MAAM,YACxB,oBAAID,MAAO,CAACC,MAAO,WAAnB,SAAgCf,KAAKX,MAAMO,SAE7C,uBACA,uBAAMkB,MAAO,CAACE,QAAS,cAAcC,cAAe,OAApD,UACE,cAAC,IAAD,CAAyBF,MAAM,YAC/B,oBAAID,MAAO,CAACC,MAAO,WAAnB,SAAgCf,KAAKX,MAAMK,aAE7C,uBACA,uBAAMoB,MAAO,CAACE,QAAS,cAAcC,cAAe,OAApD,UACE,cAAC,IAAD,CAAkBF,MAAM,YACxB,oBAAID,MAAO,CAACC,MAAO,WAAnB,SAAgCf,KAAKX,MAAMM,qB,GA/D9B0B,IAAMC,WCEhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAYjC,OAAO,+CAErBkC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.33634be4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport $ from \"jquery\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport EmojiTransportationIcon from '@material-ui/icons/EmojiTransportation';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\nimport CodeIcon from '@material-ui/icons/Code';\nclass UserGithub extends React.Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        userID:'', \n        username: '',\n        githubtUrl: '', \n        avatarUrl: '',\n        company:'',\n        location:'',\n        bio:'',\n        followers:''\n      }     \n    } \n    componentDidMount() {\n      $.get(this.props.source,(result) => {\n        console.log(result);\n        const data = result;\n        if (data) {\n          this.setState({\n            userID:data.login,\n            username: data.name,\n            githubtUrl: data.html_url,\n            avatarUrl: data.avatar_url,\n            company:data.company,\n            location:data.location,\n            bio:data.bio,\n            followers:data.followers\n          });\n        }\n      });     \n    }\n\n\n    onClick(){\n     window.location.href=this.state.githubtUrl;\n    }\n\n\n    render() {\n      return (\n        <div>\n          <img src={this.state.avatarUrl}></img>\n          <h2 style={{color: \"#115293\"}}>{this.state.username}</h2>\n          <h3 style={{color: \"#115293\"}}>{this.state.userID}</h3>\n          <span style={{display: 'inline-flex',flexDirection: 'row'}}>\n            <EmojiPeopleIcon color=\"primary\"></EmojiPeopleIcon>\n            <h3 style={{color: \"#115293\"}}>{this.state.followers}</h3>\n            <IconButton color=\"primary\" onClick={this.onClick.bind(this)}><CodeIcon /></IconButton> \n          </span>\n          <br></br>\n          <span style={{display: 'inline-flex',flexDirection: 'row'}}>\n            <EmojiObjectsIcon color=\"primary\" />\n            <h3 style={{color: \"#115293\"}}>{this.state.bio}</h3>\n          </span>\n          <br></br>\n          <span style={{display: 'inline-flex',flexDirection: 'row'}}>\n            <EmojiTransportationIcon color=\"primary\" />\n            <h3 style={{color: \"#115293\"}}>{this.state.company}</h3>\n          </span>\n          <br></br>\n          <span style={{display: 'inline-flex',flexDirection: 'row'}}>\n            <EditLocationIcon color=\"primary\" />\n            <h3 style={{color: \"#115293\"}}>{this.state.location}</h3>\n          </span>\n        </div>         \n      );     \n    } \n  } \n\nexport default UserGithub;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UserGithub from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserGithub source=\"https://api.github.com/users/landy891003\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}